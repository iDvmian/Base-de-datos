---------------------------------------------------------------------------------
------------------------------- FUNCIONES----------------------------------------
---------------------------------------------------------------------------------
CREATE OR REPLACE FUNCTION NOMBRE_FUNCIÓN(
	PARÁMETROS CON SUS TIPOS DE DATO ASOCIADOS SEPARADOS POR COMA
)
	RETURN TIPO_DATO_DE_RETORNO_DE_LA_FUNCIÓN
IS
	VARIABLES LOCALES SI SON NECESARIAS
BEGIN
	CUERPO DE LA FUNCIÓN (ACCIÓN A REALIZAR)
	RETURN VALOR_RETORNO
	EXCEPCIONES
		ACCIONES EN CASO DE EXCEPCIÓN
		RETURN VALOR_RETORNO (EN CASO DEL FLUJO ALTERNATIVO)
END;

-- SE SOLITA CREAR UNA FUNCIÓN QUE RECIBA COMO PARÁMETRO UN CÓDIGO DE 
-- USUARIO Y RETORNE SU SUELDO ASOCIADO (ESQUEMA HR)

CREATE OR REPLACE FUNCTION CACB_OBTENER_SUELDO(
	EMPLOYEE_ID_F NUMBER
)
	RETURN NUMBER
IS
	SUELDO_OBTENIDO NUMBER :=0;
BEGIN
	SELECT SALARY INTO SUELDO_OBTENIDO
	FROM OEHR_EMPLOYEES
	WHERE EMPLOYEE_ID = EMPLOYEE_ID_F;
	RETURN SUELDO_OBTENIDO;
END;


SELECT CACB_OBTENER_SUELDO(1010)
FROM DUAL;

-- DEBE VALIDAR QUE SE RETORNEN DATOS, YA QUE SI NO TIENE SUELDO 
-- ASOCIADO,DEBE RETORNAR UN 0 Y SI NO EXISTE EMPLEADO, DEBE RETORNAR 
-- UN -1

-- PARA INCORPORAR LO ANTERIORMENTE INDICADO, DEBE TRABAJARSE DE LA 
-- SIGUIENTE FORMA:

CREATE OR REPLACE FUNCTION CACB_OBTENER_SUELDO(
	EMPLOYEE_ID_F NUMBER
)
	RETURN NUMBER
IS
	SUELDO_OBTENIDO NUMBER :=0;
BEGIN
	SELECT SALARY INTO SUELDO_OBTENIDO
	FROM OEHR_EMPLOYEES
	WHERE EMPLOYEE_ID = EMPLOYEE_ID_F;
	IF (SUELDO_OBTENIDO IS NULL) THEN
		SUELDO_OBTENIDO := 0;
	END IF;
	RETURN SUELDO_OBTENIDO;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			RETURN -1;
END;


--PARA ASIGNAR VALORES DE UNA CONSULTA A UNA VARIABLE, ESTO DEBE TRABAJARSE CON UN
--SELECT INTO.

SELECT CAMPO INTO VARIABLE
FROM TABLA

-- PRUEBA DE LA FUNCIÓN
SELECT CACB_OBTENER_SUELDO(101)
FROM DUAL;

SELECT CACB_OBTENER_SUELDO(1010)
FROM DUAL;


-- PRIMER DESAFIO =/
-- SE REQUIERE MODIFICAR LA TABLA USUARIO A TRAVÉS DE CÓDIGO CON LA 
-- INSTRUCCIÓN ALTER TABLE, AGREGANDO UN CAMPO NUEVO QUE SERÁ EMAIL 
-- DE TIPO VARCHAR2 DE LARGO 50.

-- LUEGO CREARÁ UNA FUNCIÓN QUE SE ENCARGUE DE GENERAR LOS CORREOS 
-- ELECTRÓNICOS DE LA SIGUIENTE FORMA: PRIMERA Y SEGUNDA LETRA DEL 
-- NOMBRE, TERCERA Y CUARTA LETRA DEL PRIMER APELLIDO, SEGUIDO DE UN 
-- PUNTO Y EL SEGUNDO APELLIDO COMPLETO QUE TERMINE EN @TESTSQL.CL 

-- MODIFICAR SU PROCEDIMIENTO ALMACENADO DE CARGA DE DATOS, 
-- INCORPORANDO DENTRO DE LA CARGA DE DATOS EL CORREO 
-- LUEGO REALIZAR UN DELETE FROM A LA TABLA SIN 
-- RESTRICCIONES LIMPIARLA Y LUEGO UN LLAMADO AL PROCEDIMIENTO 
-- ALMACENADO PARA LA CARGA DE UN REGISTRO DONDE SE UTILICE LA 
-- FUNCIÓN.




--- SEGUNDO DESAFÍO =)
-- CREAR UNA FUNCIÓN QUE SE ENCARGUE DE REALIZAR LA CARGA DE REGISTROS 
-- PARA LAS CLAVES PRIMARIAS DE CARACTER AUTOINCREMENTAL.

-- LUEGO MODIFICAR SU PROCEDIMIENTO ALMACENADO DE CARGA DE DATOS, 
-- INCORPORANDO DENTRO DE LA CARGA DE DATOS EL LLAMADO A LA 
-- FUNCIÓN QUE SE ENCARGUE DEL CAMPO PRIMARIO.

-- REALIZAR UN DELETE FROM A LA TABLA SIN RESTRICCIONES LIMPIARLA
-- Y LUEGO UN LLAMADO AL PROCEDIMIENTO ALMACENADO PARA LA CARGA 
-- DE 10 REGISTROS
