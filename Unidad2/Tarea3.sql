--clase 21-10-2025
-- TAREA 1
-- SE SOLICITA QUE GENERE UN TRIGGER QUE SE ENCARGUE DE OTORGAR LA CLAVE 
-- PRIMARIA PARA LA TABLA DETALLE DE NOTAS Y OTRO PARA LA TABLA USUARIOS
-- TRABAJADA EN CLASES ANTERIORES.

-- COMO TAMBIÉN GENERAR OTRO TRIGGER QUE SE ENCARGUE DE TRABAJAR LOS 
-- CAMPOS DE TIPO TEXTO EVALUÁNDOLOS EN MAYÚSCULA PARA LA TABLA USUARIOS.



-- CREACION DEL TRIGGER PARA LAS CLAVES DE LA TABLA NOTAS
CREATE OR REPLACE TRIGGER DARE_CLAVE_DETALLE_NOTAS
BEFORE INSERT
ON DARE_DETALLE_NOTAS
FOR EACH ROW
BEGIN
    IF :NEW.NRO_DETALLE IS NULL THEN
        :NEW.NRO_DETALLE  := DARE_CARGA_FUNCION;
    END IF;
END;


-- CREACION DEL TRIGEGER PARA LAS CLAVES DE LA TABLA USUARIO
CREATE OR REPLACE TRIGGER DARE_CLAVE_USUARIO
BEFORE INSERT
ON DARE_USUARIO
FOR EACH ROW
BEGIN
    IF :NEW.COD_USUARIO IS NULL THEN
        :NEW.COD_USUARIO := DARE_CARGA_FUNCION;
    END IF;
END;

-- CREACION DEL TRIGGER PARA LAS MAYUSCULAS EN LOS TEXTOS
CREATE OR REPLACE TRIGGER DARE_MAYUS_USUARIOS
BEFORE INSERT OR UPDATE ON DARE_USUARIO
FOR EACH ROW
BEGIN
    :NEW.NOMBRE_USUARIO   := UPPER(:NEW.NOMBRE_USUARIO);
    :NEW.APELLIDO1_USUARIO := UPPER(:NEW.APELLIDO1_USUARIO);
    :NEW.APELLIDO2_USUARIO := UPPER(:NEW.APELLIDO2_USUARIO);
    :NEW.EMAIL   := UPPER(:NEW.EMAIL);
END;




-- LUEGO DE RESOLVER LA TAREA 1
-- SE PIDE TRABAJAR EN ACTUALIZAR EL PROCEDIMIENTO ALMACENADO DE 
-- CARGA DE USUARIOS (PARA LA TABLA USUARIOS) Y QUITAR LA CLAVE PRIMARIA DEL
-- PROCEDIMIENTO COMO TAL Y DE SU INSERT ASOCIADO, PARA LUEGO REALIZAR
-- INSERCIÓN DE DATOS Y REALIZAR LA PRUEBA CORRESPONDIENTE // CON EL TRIGGER YA FUNCIONAL.

CREATE OR REPLACE PROCEDURE DARE_CARGA_USUARIOS(
    NOMBRE_USUARIO_P VARCHAR2,
    APELLIDO1_USUARIO_P VARCHAR2,
    APELLIDO2_USUARIO_P VARCHAR2,
    CORREO_P VARCHAR2 DEFAULT NULL
) 
IS 
BEGIN
    LOCK TABLE DARE_USUARIO IN ROW EXCLUSIVE MODE;

    INSERT INTO DARE_USUARIO(NOMBRE_USUARIO, APELLIDO1_USUARIO, APELLIDO2_USUARIO, EMAIL)
    VALUES (NOMBRE_USUARIO_P, APELLIDO1_USUARIO_P, APELLIDO2_USUARIO_P, 
            DARE_GENERAR_CORREOS(NOMBRE_USUARIO_P, APELLIDO1_USUARIO_P, APELLIDO2_USUARIO_P));
    COMMIT;
    EXCEPTION
        WHEN PROGRAM_ERROR THEN
            RAISE_APPLICATION_ERROR(-6501, 'ERROR INTERNO PROGRAMA');
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20010,'UPSI FALLE');
        ROLLBACK;
END;


--INSERTAR LO NUEVOS DATOS
BEGIN
    DELETE FROM DARE_USUARIO;
	DARE_CARGA_USUARIOS('CARLOS','CASTRO','BUSTAMANTE');
	DARE_CARGA_USUARIOS('FELIPE','OYARZUN','SANTELICES');
	DARE_CARGA_USUARIOS('MACARENA','URBINA','FIGUEROA');
	DARE_CARGA_USUARIOS('CARLOS','CASTRO','BUSTAMANTE');
	DARE_CARGA_USUARIOS('CARMEN','BUSTOS','BUSTAMANTE');	
END;

--VERIFICACION (PREGUNTAR AL PROFE POR QUE SE MUESTRA DE FORMA DESORDENADA)
SELECT * FROM DARE_USUARIO;





--SE SOLICITA MODIFICAR EL FUNCION DE LOS CORREOS, DE ACUEDO
-- A LA SIGUIENTE PROBLEMÁTICA. CUANDO UN NOMBRE Y DOS APELLIDOS SE REPITAN,
-- EJEMPLO, EXISTAN 2 CARLOS CASTRO BUSTAMANTE, PARA EL PRIMERO DEBE GENERARSE UN
-- CORREO SEGÚN LO YA INDICADO POR REQUERIMIENTOS ANTERIORES: 
-- CAST.BUSTAMANTE@TESTSQL.CL Y PARA EL SEGUNDO: CAST.BUSTAMANTE1@TESTSQL.CL
-- EN CASO DE EXISTIR UN 3RO CAST.BUSTAMANTE2@TESTSQL.CL Y ASÍ SUCESIVAMENTE
-- UTILIZANDO UNA SECUENCIA PARA ESTO O UNA CONSULTA, MANEJANDO LAS RESTRICCIONES 
-- INDICADAS POR EL EJEMPLO




CREATE OR REPLACE FUNCTION DARE_GENERAR_CORREOS(
    NOMBRE_USUARIO_F   VARCHAR2,
    APELLIDO1_USUARIO_F VARCHAR2,
    APELLIDO2_USUARIO_F VARCHAR2
)
RETURN VARCHAR2
IS
    CORREO_BASE   VARCHAR2(50);
    CORREO_FINAL  VARCHAR2(50);
    INDICE      NUMBER;
BEGIN
    -- GENERAR CORREO
    CORREO_BASE := UPPER(SUBSTR(NOMBRE_USUARIO_F,1,2) || SUBSTR(APELLIDO1_USUARIO_F,3,2) || '.' || APELLIDO2_USUARIO_F || '@TESTSQL.CL');

    -- CONATDOR DE CORREOS CON ESE MISMO PATRON
    SELECT COUNT(*)
    INTO INDICE
    FROM DARE_USUARIO
    WHERE UPPER(EMAIL) LIKE UPPER(SUBSTR(NOMBRE_USUARIO_F,1,2) || SUBSTR(APELLIDO1_USUARIO_F,3,2) || '.' || APELLIDO2_USUARIO_F || '%@TESTSQL.CL');

    -- SI NO SE REPITE ALGUNO, DEJAR EL BASE
    IF INDICE = 0 THEN
        CORREO_FINAL := CORREO_BASE;
    ELSE
        -- SI YA EXISTE AGREGAR UN NUMERO INCREMENTAL
        CORREO_FINAL := UPPER(SUBSTR(NOMBRE_USUARIO_F,1,2) || SUBSTR(APELLIDO1_USUARIO_F,3,2) || '.' || APELLIDO2_USUARIO_F || TO_CHAR(INDICE) || '@TESTSQL.CL');
    END IF;

    RETURN CORREO_FINAL;
END;


--PRUEBA

BEGIN
    DELETE FROM DARE_USUARIO;
	DARE_CARGA_USUARIOS('CARLOS','CASTRO','BUSTAMANTE');
	DARE_CARGA_USUARIOS('FELIPE','OYARZUN','SANTELICES');
	DARE_CARGA_USUARIOS('MACARENA','URBINA','FIGUEROA');
	DARE_CARGA_USUARIOS('CARLOS','CASTRO','BUSTAMANTE');
	DARE_CARGA_USUARIOS('CARMEN','BUSTOS','BUSTAMANTE');	
END;

-- 
SELECT * FROM DARE_USUARIO;
