--- ESTRUCTURA DE FUNCIONES-----


CREATE OR REPLACE FUNCTION NOMBRE_FUNCION(
    NOMBRE_F   VARCHAR2,
    APELLIDO1_F VARCHAR2,
    APELLIDO2_F VARCHAR2 -- LAS VARIABLES DE TABLAS, ENTRADA QUE SE USARAN
)
RETURN VARCHAR2 ---- EL TIPO DE DATO QUE RETORNARA
IS
    VARIABLE1  VARCHAR2(50); -- VARIABLES DECLARADAS DENTRO DE LA FUNCION
    VARIABLE2      NUMBER;
BEGIN
    RETURN CORREO_FINAL; -- retornamos lo que queremos
    
END;


--- ESTRUCTURA DE PROCEDIMIENTO 

CREATE SEQUENCE DARE_SECUENCIA

    START WITH 1 --DONDE EMPEAZR
    INCREMENT BY 1 -- CUANTIO IMCREMNTAR
    MINVALUE 1 -- VALOR MONIMO
    MAXVALUE 2500 -- MAZIMO VALOR
    NOCYCLE; --- NOCYBLE Y CUBLE


--- ESTRUTURA PREOCEDIMIENTO ALMACENADO



CREATE OR REPLACE PROCEDURE DARE_CARGA_USUARIOS(
    VARIABLE1_P VARCHAR2,  -- VAIABLES QUE SE USARAN DENTRO DEL PROCEDMIENTO 
    VARIABLE2_P VARCHAR2,
    VARIABLE3_P VARCHAR2 DEFAULT NULL
) 
IS 
BEGIN
    LOCK TABLE NOMBRE_TABLA IN ROW EXCLUSIVE MODE;

    -- CODIGO
    COMMIT;
    EXCEPTION -- ERRORES
        WHEN PROGRAM_ERROR THEN
            RAISE_APPLICATION_ERROR(-6501, 'ERROR INTERNO PROGRAMA');
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20010,'UPSI FALLE');
        ROLLBACK;
END;





--ESTRUTURA TRIGGER----

CREATE OR REPLACE TRIGGER Nombre_trigger
AFTER/BEFORE   INSERT/DELETE/UPDATE ON nombre_tabla
FOR EACH ROW
BEGIN
    IF :NEW.COD_USUARIO IS NULL THEN
        :NEW.COD_USUARIO := DARE_CARGA_FUNCION;
    END IF;
END;


--- CONSUKTAS BASICAS

-- Insertar registros
INSERT INTO nombre_tabla VALUES (1, 'Texto', SYSDATE);

-- Modificar datos
UPDATE nombre_tabla
SET campo2 = 'Nuevo valor'
WHERE campo1 = 1;

-- Eliminar registros
DELETE FROM nombre_tabla
WHERE campo1 = 1;

-- Consultar registros
SELECT * FROM nombre_tabla
WHERE campo2 LIKE '%valor%';

